# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Kivy 1.10.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-13 08:22+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: JUN OKAZAKI <okazakijun54392@gmail.com>, 2017\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/python_kivy_doc_ja/teams/74810/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sources/guide/inputs.rst:2
msgid "Input management"
msgstr "Input management (翻訳済み)"

#: ../../sources/guide/inputs.rst:5
msgid "Input architecture"
msgstr "Input architecture (入力のアーキテクチャ)"

#: ../../sources/guide/inputs.rst:7
msgid ""
"Kivy is able to handle most types of input: mouse, touchscreen, "
"accelerometer, gyroscope, etc. It handles the native multitouch protocols on"
" the following platforms: Tuio, WM_Touch, MacMultitouchSupport, MT Protocol "
"A/B and Android."
msgstr ""
"Kivyはほぼすべてのタイプの入力、たとえばマウス、タッチスクリーン、加速度センサ、ジャイロスコープといったデバイスからの入力を取り扱うことができます。さらに"
" Tuio、WM_Touch、MacMultitouchSupport、MT Protocol "
"A/BやAndroidといったプラットフォームのネイティヴなマルチタッチのプロトコルをも取り扱います。"

#: ../../sources/guide/inputs.rst:11
msgid "The global architecture can be viewed as::"
msgstr "入力に関する全体的なアーキテクチャは、次のようなものと見なすことができます::"

#: ../../sources/guide/inputs.rst:15
msgid ""
"The class of all input events is the "
":class:`~kivy.input.motionevent.MotionEvent`. It generates 2 kinds of "
"events:"
msgstr ""
"すべての入力イベントを取り扱うクラスが、 :class:`~kivy.input.motionevent.MotionEvent`  "
"です。これは2種類のイベントを生成します:"

#: ../../sources/guide/inputs.rst:19
msgid ""
"Touch events: a motion event that contains at least an X and Y position. All"
" the touch events are dispatched across the Widget tree."
msgstr ""
"Touch events (タッチ・イベント): 少なくともx座標とy座標を含むような motion event です。すべての touch event"
" は、ウィジェットツリーに向けてディスパッチされます。"

#: ../../sources/guide/inputs.rst:21
msgid ""
"No-touch events: all the rest. For example, the accelerometer is a "
"continuous event, without position. It never starts or stops. These events "
"are not dispatched across the Widget tree."
msgstr ""
"No-touch events "
"(ノー・タッチ・イベント):その名の通り、タッチ・イベントでないイベントです。たとえば、加速度センサは位置に依らない連続的なイベントです。それは開始することも停止することもありません。この種のイベントは、ウィジェットツリーに向けてディスパッチされることはありません。"

#: ../../sources/guide/inputs.rst:26
msgid ""
"A Motion event is generated by an :mod:`Input Provider "
"<kivy.input.providers>`. An Input Provider is responsible for reading the "
"input event from the operating system, the network or even from another "
"application. Several input providers exist, such as:"
msgstr ""
"Motion event は、 :mod:`Input Provider <kivy.input.providers>` によって生成されます。この "
"Input Provider が、OS、ネットワーク、あるいは他のアプリケーションから入力イベントを読みとる任務を担います。たとえば、次のような "
"input provider が存在します:"

#: ../../sources/guide/inputs.rst:31
msgid ""
":class:`~kivy.input.providers.tuio.TuioMotionEventProvider`: create a UDP "
"server and listen for TUIO/OSC messages."
msgstr ""
":class:`~kivy.input.providers.tuio.TuioMotionEventProvider`: "
"UDPサーバを生成し、TUIO/OSC メッセージをリッスンします。"

#: ../../sources/guide/inputs.rst:33
msgid ""
":class:`~kivy.input.providers.wm_touch.WM_MotionEventProvider`: use the "
"windows API for reading multitouch information and sending it to Kivy."
msgstr ""
":class:`~kivy.input.providers.wm_touch.WM_MotionEventProvider`: "
"マルチタッチ情報を読み込み、それを Kivy に送るために、Windows APIを用います。"

#: ../../sources/guide/inputs.rst:35
msgid ""
":class:`~kivy.input.providers.probesysfs.ProbeSysfsHardwareProbe`: In Linux,"
" iterate over all the hardware connected to the computer, and attaches a "
"multitouch input provider for each multitouch device found."
msgstr ""
":class:`~kivy.input.providers.probesysfs.ProbeSysfsHardwareProbe`: "
"Linuxにおいて、コンピュータに接続するすべてのハードウェアについてイテレートし、見つかったマルチタッチデバイスのそれぞれについて、マルチタッチ "
"input provider を接続します。"

#: ../../sources/guide/inputs.rst:38
msgid "and much more!"
msgstr "他にもたくさんあります!"

#: ../../sources/guide/inputs.rst:40
msgid ""
"When you write an application, you don't need to create an input provider. "
"Kivy tries to automatically detect available hardware. However, if you want "
"to support custom hardware, you will need to configure kivy to make it work."
msgstr ""
"あなたがアプリを作る時には、自分で input provider を作る必要はありません。Kivy "
"は自動的に、利用可能なハードウェアの検知を試みます。しかし、もし自前のハードウェアをサポートしたいときには、うまくいくようにKivyを設定する必要があるでしょう。"

#: ../../sources/guide/inputs.rst:44
msgid ""
"Before the newly-created Motion Event is passed to the user, Kivy applies "
"post-processing to the input. Every motion event is analyzed to detect and "
"correct faulty input, as well as make meaningful interpretations like:"
msgstr ""
"新しく生成された Motion Event がユーザに渡される前に、Kivy は入力に対する後処理を行います。あらゆる Motion Event "
"は分析され、その結果、下記のような意味ある解釈がなされることがあります。また誤った入力が検知されて修正されることもあります。"

#: ../../sources/guide/inputs.rst:48
msgid ""
"Double/triple-tap detection, according to a distance and time threshold"
msgstr "距離および時間の閾値に基づいた、ダブル/トリプルタップの検知。"

#: ../../sources/guide/inputs.rst:49
msgid "Making events more accurate when the hardware is not accurate"
msgstr "ハードウェアが正確でないときにイベントをより正確なものに修正する。"

#: ../../sources/guide/inputs.rst:50
msgid ""
"Reducing the amount of generated events if the native touch hardware is "
"sending events with nearly the same position"
msgstr "ハードウェアがほぼ同じ位置からのイベントを送り続けているときは、生成するイベントの量を減らします。"

#: ../../sources/guide/inputs.rst:53
msgid ""
"After processing, the motion event is dispatched to the Window. As explained"
" previously, not all events are dispatched to the whole widget tree: the "
"window filters them. For a given event:"
msgstr ""
"上記のような処理を経て、Motion Event は Window "
"にディスパッチされます。上で述べた通り、すべてのイベントがウィジェットツリーにディスパッチされるわけではありません。Window "
"がそのフィルター役となります。与えられたイベントに対して:"

#: ../../sources/guide/inputs.rst:57
msgid ""
"if it's only a motion event, it will be dispatched to "
":meth:`~kivy.core.window.WindowBase.on_motion`"
msgstr ""
"それがただの Motion Event であれば、:meth:`~kivy.core.window.WindowBase.on_motion`\n"
"にディスパッチされます。"

#: ../../sources/guide/inputs.rst:59
msgid ""
"if it's a touch event, the (x,y) position of the touch (0-1 range) will be "
"scaled to the Window size (width/height), and dispatched to:"
msgstr ""
"もしそれが Touch Event であれば、そのタッチの (x,y) 座標 (0から1の値を取る) がWindow のサイズにスケーリングされ "
"(width/height 属性)、以下のどれかにディスパッチされます。"

#: ../../sources/guide/inputs.rst:62
msgid ":meth:`~kivy.uix.widget.Widget.on_touch_down`"
msgstr ":meth:`~kivy.uix.widget.Widget.on_touch_down`"

#: ../../sources/guide/inputs.rst:63
msgid ":meth:`~kivy.uix.widget.Widget.on_touch_move`"
msgstr ":meth:`~kivy.uix.widget.Widget.on_touch_move`"

#: ../../sources/guide/inputs.rst:64
msgid ":meth:`~kivy.uix.widget.Widget.on_touch_up`"
msgstr ":meth:`~kivy.uix.widget.Widget.on_touch_move`"

#: ../../sources/guide/inputs.rst:68
msgid "Motion event profiles"
msgstr "Motion event profiles (モーション・イベント・プロファイル)"

#: ../../sources/guide/inputs.rst:70
msgid ""
"Depending on your hardware and the input providers used, more information "
"may be made available to you. For example, a touch input has an (x,y) "
"position, but might also have pressure information, blob size, an "
"acceleration vector, etc."
msgstr ""
"使用しているハードウェアや input provider に応じて、より多くの情報が利用可能となるかもしれません。たとえば、タッチによる入力は "
"(x,y) 座標を持ちますが、同時に圧力、ブロブの大きさ、加速度ベクトルなどの情報を持つかもしれません。"

#: ../../sources/guide/inputs.rst:74
msgid ""
"A profile is a string that indicates what features are available inside the "
"motion event. Let's imagine that you are in an ``on_touch_move`` method::"
msgstr ""
"profile は、motion event の中で何の特徴が利用可能であるかを示す文字列です。次の ``on_touch_move`` "
"イベントを想像してください::"

#: ../../sources/guide/inputs.rst:81
msgid "The print could output::"
msgstr "この print 文が出力するのは::"

#: ../../sources/guide/inputs.rst:87
msgid ""
"Many people mix up the profile's name and the name of the corresponding "
"property. Just because ``'angle'`` is in the available profile doesn't mean "
"that the touch event object will have an ``angle`` property."
msgstr ""
"Profileの名前と対応するプロパティの名前を混同してはなりません。``'angle'`` が利用可能な profile "
"だからと言って、\"touch event が ``angle`` プロパティを持つわけではないのです。"

#: ../../sources/guide/inputs.rst:91
msgid ""
"For the ``'pos'`` profile, the properties ``pos``, ``x``, and ``y`` will be "
"available. With the ``'angle'`` profile, the property ``a`` will be "
"available. As we said, for touch events ``'pos'`` is a mandatory profile, "
"but not ``'angle'``. You can extend your interaction by checking if the "
"``'angle'`` profile exists::"
msgstr ""
"``'pos'`` profile については、　``pos``、　``x``、　``y`` という3つのプロパティが利用可能です。 "
"``'angle'`` profile については、``a`` というプロパティが利用可能です。すでに述べた通り、touch event にとって "
"``'pos'`` は必須の profile ですが ``'angle'`` はそうではありません。``'angle'`` profile "
"が存在するかどうかをチェックすることによりインタラクションを拡張できます::"

#: ../../sources/guide/inputs.rst:102
msgid ""
"You can find a list of available profiles in the "
":mod:`~kivy.input.motionevent` documentation."
msgstr "利用可能な profile のリストは、 :mod:`~kivy.input.motionevent` で確認できます。"

#: ../../sources/guide/inputs.rst:106
msgid "Touch events"
msgstr "Touch events (タッチ・イベント)"

#: ../../sources/guide/inputs.rst:108
msgid ""
"A touch event is a specialized :class:`~kivy.input.motionevent.MotionEvent` "
"where the property :attr:`~kivy.input.motionevent.MotionEvent.is_touch` "
"evaluates to True. For all touch events, you automatically have the X and Y "
"positions available, scaled to the Window width and height. In other words, "
"all touch events have the ``'pos'`` profile."
msgstr ""
"Touch event は、 :attr:`~kivy.input.motionevent.MotionEvent.is_touch` プロパティが "
"True と評価される、特別な :class:`~kivy.input.motionevent.MotionEvent` です。すべての touch "
"event について、Windowの幅と高さにスケーリングされた x,y座標が自動的に利用可能となります。言い換えれば、すべての touch event"
" は ``'pos'`` profile を持ちます。"

#: ../../sources/guide/inputs.rst:115
msgid "Touch event basics"
msgstr "Touch event basics (タッチ・イベントの基本)"

#: ../../sources/guide/inputs.rst:117
msgid ""
"By default, touch events are dispatched to all currently displayed widgets. "
"This means widgets receive the touch event whether it occurs within their "
"physical area or not."
msgstr ""
"デフォルトでは、touch event はその時表示されているすべてのウィジェットにディスパッチされます。つまりウィジェットは、touch event "
"がその内部で起きようが起きまいがお構いなしに、その touch event を受け取るのです。"

#: ../../sources/guide/inputs.rst:121
msgid ""
"This can be counter intuitive if you have experience with other GUI "
"toolkits. These typically divide the screen into geometric areas and only "
"dispatch touch or mouse events to the widget if the coordinate lies within "
"the widgets area."
msgstr ""
"もし他の GUI ツールキットを使った経験があるなら、これは直感に反することかもしれません。典型的な GUI "
"ツールキットは、スクリーンを分割し、タッチやマウスの座標がウィジェットの内部にあるときのみ、そのウィジェットにイベントをディスパッチするからです。"

#: ../../sources/guide/inputs.rst:126
msgid ""
"This requirement becomes very restrictive when working with touch input. "
"Swipes, pinches and long presses may well originate from outside of the "
"widget that wants to know about them and react to them."
msgstr ""
"しかしこの要求は、タッチによる入力を取り扱うときには極めて厳しいものです。スワイプ、ピンチ、長押しといった操作はウィジェットの外で発生するかもしれませんし、我々はウィジェットにそういった操作を検知させ、反応させたいと考えるかもしれません。"

#: ../../sources/guide/inputs.rst:130
msgid ""
"In order to provide the maximum flexibility, Kivy dispatches the events to "
"all the widgets and lets them decide how to react to them. If you only want "
"to respond to touch events inside the widget, you simply check::"
msgstr ""
"そこでKivyでは、柔軟性を最大限持たせるために、すべてのウィジェットにイベントをディスパッチするようになっています。そしてどのように反応するかを各ウィジェットで決めることができるのです。もしウィジェットの内部で起きた"
" touch event にのみ反応したいのであれば、以下のように単純なチェックを行いましょう::"

#: ../../sources/guide/inputs.rst:141
msgid "Coordinates"
msgstr "Coordinates (座標)"

#: ../../sources/guide/inputs.rst:143
msgid ""
"You must take care of matrix transformation in your touch as soon as you use"
" a widget with matrix transformation. Some widgets such as "
":class:`~kivy.uix.scatter.Scatter` have their own matrix transformation, "
"meaning the touch must be multiplied by the scatter matrix to be able to "
"correctly dispatch touch positions to the Scatter's children."
msgstr ""
"行列による座標変換をともなうウィジェットを用いる場合、タッチの座標変換に注意する必要があります。たとえば "
":class:`~kivy.uix.scatter.Scatter` クラスは独自の変換行列を持ちますが、タッチの位置を正しく Scatter "
"の子孫に伝えるには、タッチにその行列を乗じなければならないのです。"

#: ../../sources/guide/inputs.rst:150
msgid ""
"Get coordinate from parent space to local space: "
":meth:`~kivy.uix.widget.Widget.to_local`"
msgstr ""
"親スペースの座標から、局所スペース (当該ウィジェットのスペース) の座標を得る:  "
":meth:`~kivy.uix.widget.Widget.to_local`"

#: ../../sources/guide/inputs.rst:152
msgid ""
"Get coordinate from local space to parent space: "
":meth:`~kivy.uix.widget.Widget.to_parent`"
msgstr ""
"局所スペースの座標から、親スペースの座標を得る: \n"
" :meth:`~kivy.uix.widget.Widget.to_parent`"

#: ../../sources/guide/inputs.rst:154
msgid ""
"Get coordinate from local space to window space: "
":meth:`~kivy.uix.widget.Widget.to_window`"
msgstr ""
"局所スペースの座標から、ウィンドウ上の座標を得る: \n"
" :meth:`~kivy.uix.widget.Widget.to_window`"

#: ../../sources/guide/inputs.rst:156
msgid ""
"Get coordinate from window space to local space: "
":meth:`~kivy.uix.widget.Widget.to_widget`"
msgstr "ウィンドウ上の座標から、局所スペースの座標を得る: :meth:`~kivy.uix.widget.Widget.to_widget`"

#: ../../sources/guide/inputs.rst:159
msgid ""
"You must use one of them to scale coordinates correctly to the context. "
"Let's look the scatter implementation::"
msgstr "座標を意図したとおりにスケーリングするには、上記のうち1つを用いる必要があります。次の Scatter のインプリを見てください::"

#: ../../sources/guide/inputs.rst:182
msgid "Touch shapes"
msgstr "Touch shapes (タッチの成す形)"

#: ../../sources/guide/inputs.rst:184
msgid ""
"If the touch has a shape, it will be reflected in the 'shape' property. "
"Right now, only a :class:`~kivy.input.shape.ShapeRect` can be exposed::"
msgstr ""
"もしタッチが形を成すならば、それは 'shape' プロパティに反映されるでしょう。現時点では、 "
":class:`~kivy.input.shape.ShapeRect` のみが公開されています::"

#: ../../sources/guide/inputs.rst:196
msgid "Double tap"
msgstr "Double tap (ダブル・タップ)"

#: ../../sources/guide/inputs.rst:198
msgid ""
"A double tap is the action of tapping twice within a time and a distance. "
"It's calculated by the doubletap post-processing module. You can test if the"
" current touch is one of a double tap or not::"
msgstr ""
"ダブル・タップとは、短い時間と距離の中で、2度タップを行うことです。ダブル・タップに関する事後処理モジュールによって計算されて今起こったタッチがダブル・タップなのか否かをテストできます::"

#: ../../sources/guide/inputs.rst:210
msgid "Triple tap"
msgstr "Triple tap (トリプル・タップ)"

#: ../../sources/guide/inputs.rst:212
msgid ""
"A triple tap is the action of tapping thrice within a time and a distance. "
"It's calculated by the tripletap post-processing module. You can test if the"
" current touch is one of a triple tap or not::"
msgstr ""
"トリプル・タップとは、短い時間と距離の中で、3度タップを行うことです。トリプル・タップに関する事後処理モジュールによって計算され、今起こったタッチがトリプル・タップなのか否かをテストできます:"

#: ../../sources/guide/inputs.rst:224
msgid "Grabbing touch events"
msgstr "Grabbing touch events (タッチ・イベントを、grabによってつかまえる)"

#: ../../sources/guide/inputs.rst:226
msgid ""
"It's possible for the parent widget to dispatch a touch event to a child "
"widget from within ``on_touch_down``, but not from ``on_touch_move`` or "
"``on_touch_up``. This can happen in certain scenarios, like when a touch "
"movement is outside the bounding box of the parent, so the parent decides "
"not to notify its children of the movement."
msgstr ""
"親ウィジェットは、 ``on_touch_move`` や ``on_touch_up`` からではなく、 ``on_touch_down`` "
"の内部で、touch event "
"をその子ウィジェットにディスパッチする、あるいはしないことを決定することが可能です。これは、たとえば親ウィジェットのバウンディングボックスの外でタッチの動きが始まったときに、その親は子にイベントをディスパッチしないことを決定するといったような文脈において有りえます。"

#: ../../sources/guide/inputs.rst:232
msgid ""
"But you might want to do something in ``on_touch_up``. Say you started "
"something in the ``on_touch_down`` event, like playing a sound, and you'd "
"like to finish things on the ``on_touch_up`` event. Grabbing is what you "
"need."
msgstr ""
"しかし ``on_touch_up`` において何かをしたいと考えるかもしれません。たとえばサウンドの再生だとかを ``on_touch_down`` "
"において開始し、 ``on_touch_up`` においてそれを停止したい、と考えるかもしれません。その時必要なのが、grab です。"

#: ../../sources/guide/inputs.rst:236
msgid ""
"When you grab a touch, you will always receive the move and up event. But "
"there are some limitations to grabbing:"
msgstr ""
"あなたがタッチを grab するとき、必ず move イベントと up イベントを受け取ることになります。しかし grab "
"にはいくつかの制限があります:"

#: ../../sources/guide/inputs.rst:239
msgid ""
"You will receive the event at least twice: one time from your parent (the "
"normal event), and one time from the window (grab)."
msgstr "少なくとも2回のイベントを受け取ることになります: 1回は親から (通常のイベント)、そしてもう1回はウィンドウから (grab)。"

#: ../../sources/guide/inputs.rst:241
msgid ""
"You might receive an event with a grabbed touch, but not from you: it can be"
" because the parent has sent the touch to its children while it was in the "
"grabbed state."
msgstr ""
"Grab されたタッチからのイベントを受け取るかもしれませんが、それは、親ウィジェットが grab "
"された状態にあったときに、子供たちにタッチをディスパッチしたことによるものかもしれません。"

#: ../../sources/guide/inputs.rst:244
msgid ""
"The touch coordinate is not translated to your widget space because the "
"touch is coming directly from the Window. It's your job to convert the "
"coordinate to your local space."
msgstr ""
"タッチの座標はウィジェットスペースのものに変換されません。なぜならタッチはWindowから直接ディスパッチされたものだからです。ウィジェットスペースに変換することはあなたのやるべきことです"

#: ../../sources/guide/inputs.rst:248
msgid "Here is an example of how to use grabbing::"
msgstr "Grabの使用例を以下に示します::"

#: ../../sources/guide/inputs.rst:275
msgid "Touch Event Management"
msgstr "Touch Event Management (タッチ・イベントの管理)"

#: ../../sources/guide/inputs.rst:277
msgid ""
"In order to see how touch events are controlled and propagated between "
"widgets, please refer to the :ref:`Widget touch event bubbling <widget-"
"event-bubbling>` section."
msgstr ""
"Touch event がどのように制御され、またどのようにウィジェット間を伝播するのかについては、:ref:`Widget touch event "
"bubbling <widget-event-bubbling>`  を参照してください。"

#: ../../sources/guide/inputs.rst:282
msgid "Joystick events"
msgstr "Joystick events(ジョイスティックのイベント)"

#: ../../sources/guide/inputs.rst:284
msgid ""
"A joystick input represents raw values received directly from physical or "
"virtual controllers through the SDL2 provider via these events:"
msgstr ""
"ジョイスティックの入力は物理的または仮想的なコントローラからSDL2のプロバイダをかいして直接受け取った生の値を、以下のイベントをかいして表します。"

#: ../../sources/guide/inputs.rst:287
msgid "SDL_JOYAXISMOTION"
msgstr "SDL_JOYAXISMOTION"

#: ../../sources/guide/inputs.rst:288
msgid "SDL_JOYHATMOTION"
msgstr "SDL_JOYHATMOTION"

#: ../../sources/guide/inputs.rst:289
msgid "SDL_JOYBALLMOTION"
msgstr "SDL_JOYBALLMOTION"

#: ../../sources/guide/inputs.rst:290
msgid "SDL_JOYBUTTONDOWN"
msgstr "SDL_JOYBUTTONDOWN"

#: ../../sources/guide/inputs.rst:291
msgid "SDL_JOYBUTTONUP"
msgstr "SDL_JOYBUTTONUP"

#: ../../sources/guide/inputs.rst:293
msgid ""
"Every motion event has a minimum, maximum and default value which can reach:"
msgstr "すべてのモーションイベントには最小値、最大値、デフォルト値があります:"

#: ../../sources/guide/inputs.rst:297
msgid "Event"
msgstr "イベント"

#: ../../sources/guide/inputs.rst:297
msgid "Minimum"
msgstr "最小値"

#: ../../sources/guide/inputs.rst:297
msgid "Maximum"
msgstr "最大値"

#: ../../sources/guide/inputs.rst:297
msgid "Default"
msgstr "デフォルト値"

#: ../../sources/guide/inputs.rst:299
msgid "on_joy_axis"
msgstr "on_joy_axis"

#: ../../sources/guide/inputs.rst:299
msgid "-32767"
msgstr "-32767"

#: ../../sources/guide/inputs.rst:299
msgid "32767"
msgstr "32767"

#: ../../sources/guide/inputs.rst:299
msgid "0"
msgstr "0"

#: ../../sources/guide/inputs.rst:301
msgid "on_joy_hat"
msgstr "on_joy_hat"

#: ../../sources/guide/inputs.rst:301
msgid "(-1, -1)"
msgstr "(-1, -1)"

#: ../../sources/guide/inputs.rst:301
msgid "(1, 1)"
msgstr "(1, 1)"

#: ../../sources/guide/inputs.rst:301
msgid "(0, 0)"
msgstr "(0, 0)"

#: ../../sources/guide/inputs.rst:303
msgid "on_joy_ball"
msgstr "on_joy_ball"

#: ../../sources/guide/inputs.rst:303 ../../sources/guide/inputs.rst:303
#: ../../sources/guide/inputs.rst:303
msgid "Unknown"
msgstr "Unknown"

#: ../../sources/guide/inputs.rst:306
msgid ""
"Button events, on the other hand represent basically only a state of each "
"button i.e. `up` and `down`, therefore no such values are present."
msgstr ""
"一方、ボタンイベントは基本的に各ボタンの状態のみ、すなわち `up(押す)` および `down（押さない）` のみを表し、そのような値は存在しない。"

#: ../../sources/guide/inputs.rst:309
msgid "on_joy_button_up"
msgstr "on_joy_button_up"

#: ../../sources/guide/inputs.rst:310
msgid "on_joy_button_down"
msgstr "on_joy_button_down"

#: ../../sources/guide/inputs.rst:313
msgid "Joystick event basics"
msgstr "Joystick event basics(ジョイスティックとイベントの基本)"

#: ../../sources/guide/inputs.rst:319
msgid ""
"Unlike touch events, joystick events are dispatched directly to the Window, "
"which means there's only a single value passed for e.g. a specified axis, "
"not multiple ones. This makes things harder if you want to separate input to"
" different widgets, yet not impossible. You can use |dropexpl|_ as an "
"inspiration."
msgstr ""
"タッチイベントとは異なり、ジョイスティックイベントはWindowに直接送出されます。つまり指定された軸に値が1つだけ渡されます。複数の軸ではありません。入力を別々のウィジェットに分割したいですがこれは不可能ではありません。インスピレーションとして"
" |dropexpl|_ を使用できます。"

#: ../../sources/guide/inputs.rst:325
msgid ""
"To get a joystick event, you first need to bind some function to the Window "
"joystick event like this::"
msgstr "ジョイスティックのイベントを取得するにはまず次のようなWindowジョイスティックイベントにいくつかの関数をバインドする必要があります::"

#: ../../sources/guide/inputs.rst:330
msgid ""
"Then you need to fetch the parameters specified in "
":class:`~kivy.core.window.Window` for each event you use, for example::"
msgstr ""
"次に、使用するイベントごとに :class:`~kivy.core.window.Window`  で指定されたパラメータを取得する必要があります。"

#: ../../sources/guide/inputs.rst:336
msgid ""
"A variable `stickid` is an id of a controller that sent the value, `axisid` "
"is an id of an axis to which the value belongs."
msgstr "変数 `stickid`  は値を送信したコントローラのIDです。`axisid`は、値が属する軸のIDです。"

#: ../../sources/guide/inputs.rst:340
msgid "Joystick input"
msgstr "Joystick input(ジョイスティックの入力)"

#: ../../sources/guide/inputs.rst:342
msgid ""
"Kivy should be able to fetch input from any device specified as `gamepad`, "
"`joystick` or basically any other type of game controller recognized by the "
"SDL2 provider. To make things easier, here are layouts of some common "
"controllers together with ids for each part."
msgstr ""
"Kivyは、「ゲームパッド」、「ジョイスティック」、またはSDL2プロバイダが認識している基本的に他のタイプのゲームコントローラとして指定された任意のデバイスからの入力を取得できます。気楽に行うために共通のコントローラのレイアウトと各パーツのIDがあります"

#: ../../sources/guide/inputs.rst:348
msgid "Xbox 360"
msgstr "Xbox 360"

#: ../../sources/guide/inputs.rst:363
msgid "|xbox_ctr|"
msgstr "|xbox_ctr|"

#: ../../sources/guide/inputs.rst:354 ../../sources/guide/inputs.rst:354
msgid "#"
msgstr "#"

#: ../../sources/guide/inputs.rst:354 ../../sources/guide/inputs.rst:354
msgid "ID"
msgstr "ID"

#: ../../sources/guide/inputs.rst:356
msgid "1"
msgstr "1"

#: ../../sources/guide/inputs.rst:356
msgid "axis 1"
msgstr "axis 1"

#: ../../sources/guide/inputs.rst:356
msgid "2"
msgstr "2"

#: ../../sources/guide/inputs.rst:356
msgid "axis 0"
msgstr "axis 0"

#: ../../sources/guide/inputs.rst:358
msgid "3"
msgstr "3"

#: ../../sources/guide/inputs.rst:358
msgid "hat Y"
msgstr "hat Y"

#: ../../sources/guide/inputs.rst:358
msgid "4"
msgstr "4"

#: ../../sources/guide/inputs.rst:358
msgid "hat X"
msgstr "hat X"

#: ../../sources/guide/inputs.rst:360
msgid "5"
msgstr "5"

#: ../../sources/guide/inputs.rst:360
msgid "axis 4"
msgstr "axis 4"

#: ../../sources/guide/inputs.rst:360
msgid "6"
msgstr "6"

#: ../../sources/guide/inputs.rst:360
msgid "axis 3"
msgstr "axis 3"

#: ../../sources/guide/inputs.rst:362
msgid "7"
msgstr "7"

#: ../../sources/guide/inputs.rst:362
msgid "axis 2"
msgstr "axis 2"

#: ../../sources/guide/inputs.rst:362
msgid "8"
msgstr "8"

#: ../../sources/guide/inputs.rst:362
msgid "axis 5"
msgstr "axis 5"

#: ../../sources/guide/inputs.rst:364
msgid "9"
msgstr "9"

#: ../../sources/guide/inputs.rst:364
msgid "button 4"
msgstr "button 4"

#: ../../sources/guide/inputs.rst:364
msgid "10"
msgstr "10"

#: ../../sources/guide/inputs.rst:364
msgid "button 5"
msgstr "button 5"

#: ../../sources/guide/inputs.rst:366
msgid "X"
msgstr "X"

#: ../../sources/guide/inputs.rst:366
msgid "button 2"
msgstr "button 2"

#: ../../sources/guide/inputs.rst:366
msgid "Y"
msgstr "Y"

#: ../../sources/guide/inputs.rst:366
msgid "button 3"
msgstr "button 3"

#: ../../sources/guide/inputs.rst:368
msgid "A"
msgstr "A"

#: ../../sources/guide/inputs.rst:368
msgid "button 0"
msgstr "button 0"

#: ../../sources/guide/inputs.rst:368
msgid "B"
msgstr "B"

#: ../../sources/guide/inputs.rst:368
msgid "button 1"
msgstr "button 1"

#: ../../sources/guide/inputs.rst:370
msgid "back"
msgstr "back"

#: ../../sources/guide/inputs.rst:370
msgid "button 6"
msgstr "button 6"

#: ../../sources/guide/inputs.rst:370
msgid "start"
msgstr "start"

#: ../../sources/guide/inputs.rst:370
msgid "button 7"
msgstr "button 7"

#: ../../sources/guide/inputs.rst:372
msgid "center"
msgstr "center"

#: ../../sources/guide/inputs.rst:372
msgid "button 10"
msgstr "button 10"

#: ../../sources/guide/inputs.rst:376
msgid "Joystick debugging"
msgstr "Joystick debugging(ジョイスティックでのデバッグ)"

#: ../../sources/guide/inputs.rst:381
msgid ""
"Mostly you'd want to debug your application with multiple controllers, or "
"test it against _other_ types of controllers (e.g. different brands). As an "
"alternative you might want to use some of the available controller "
"emulators, such as |vjoy|_."
msgstr ""
"多くの場合で複数のコントローラでアプリケーションをデバッグしたり、他のタイプのコントローラ（たとえば異なるブランドで）に対してテストしたい場合があります。代わりに、|vjoy|_"
" など利用可能なコントローラエミュレータを使用することもできます。"
